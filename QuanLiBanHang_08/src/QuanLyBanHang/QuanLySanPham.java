/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package QuanLyBanHang;

import TrangChu.home;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import QuanLyBanHangDao.SanPhamDao;
import QuanLyBanHangModel.SanPham;
import javax.swing.JPanel;

/**
 *
 * @author Nguyen Linh
 */

public class QuanLySanPham extends javax.swing.JFrame {

    /**
     * Creates new form QuanLySanPham
     */
    Connection conn;
    PreparedStatement ps;
    ResultSet rs;
    public QuanLySanPham() {
        initComponents();
        getContentPane().setBackground(Color.white); 
        Connect();
        SanPham_Load();
    }
    
    public JPanel getJPanel_QLSP()
    {
      return jPanelQLSP;
    }
    
    public void Connect(){ //ket noi csdl
        try {
        Class.forName("oracle.jdbc.driver.OracleDriver");
        System.out.print("ket noi thanh cong");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(QuanLySanPham.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            
           conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:orcl","QuanLyBanHang", "qlbh");
        
        } catch (SQLException ex) {
            Logger.getLogger(QuanLySanPham.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
        
    public void SanPham_Load(){
           
        try {
            ps = conn.prepareStatement("SELECT * FROM SANPHAM ");
            rs = ps.executeQuery();
            
            ResultSetMetaData rsd = rs.getMetaData();
            int c = rsd.getColumnCount();
          
            DefaultTableModel model = (DefaultTableModel) listSP.getModel();
            model.setRowCount(0);
            
            while (rs.next()){
                Vector v1 = new Vector();
                for(int i=1;i<=c;i++){
                    v1.add(rs.getString("masp"));
                    v1.add(rs.getString("tensp"));
                    v1.add(rs.getString("dvt"));
                    v1.add(rs.getString("nuocsx"));
                    v1.add(rs.getLong("gia"));
              }
                model.addRow(v1);
               listSP.setModel(model);
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(QuanLySanPham.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }
    public void LamMoi(){
        txtMa.setText("");
        txtTen.setText("");
        cbbDVT.setSelectedItem("Lựa chọn");
        cbbNuocSX.setSelectedItem("Lựa chọn");
        txtGia.setText("");
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanelQLSP = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        jBfind = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        jBInsert = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        jBDelete = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JToolBar.Separator();
        jBUpDate = new javax.swing.JButton();
        jSeparator5 = new javax.swing.JToolBar.Separator();
        jBFresh = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listSP = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtMa = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtTen = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        cbbDVT = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        cbbNuocSX = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        txtGia = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanelQLSP.setPreferredSize(new java.awt.Dimension(1000, 640));

        jToolBar1.setBackground(new java.awt.Color(255, 255, 255));
        jToolBar1.setRollover(true);

        jBfind.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jBfind.setIcon(new javax.swing.ImageIcon(getClass().getResource("/newIcon/find.png"))); // NOI18N
        jBfind.setText("Tìm kiếm");
        jBfind.setFocusable(false);
        jBfind.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBfind.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBfind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBfindActionPerformed(evt);
            }
        });
        jToolBar1.add(jBfind);
        jToolBar1.add(jSeparator2);

        jBInsert.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jBInsert.setIcon(new javax.swing.ImageIcon(getClass().getResource("/newIcon/insert.png"))); // NOI18N
        jBInsert.setText("Thêm mới");
        jBInsert.setFocusable(false);
        jBInsert.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBInsert.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBInsertActionPerformed(evt);
            }
        });
        jToolBar1.add(jBInsert);
        jToolBar1.add(jSeparator3);

        jBDelete.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jBDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/newIcon/delete.png"))); // NOI18N
        jBDelete.setText("    Xóa   ");
        jBDelete.setFocusable(false);
        jBDelete.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBDelete.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBDeleteActionPerformed(evt);
            }
        });
        jToolBar1.add(jBDelete);
        jToolBar1.add(jSeparator4);

        jBUpDate.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jBUpDate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/newIcon/edit.png"))); // NOI18N
        jBUpDate.setText("Cập nhật");
        jBUpDate.setFocusable(false);
        jBUpDate.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBUpDate.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBUpDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBUpDateActionPerformed(evt);
            }
        });
        jToolBar1.add(jBUpDate);
        jToolBar1.add(jSeparator5);

        jBFresh.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jBFresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/newIcon/refresh.png"))); // NOI18N
        jBFresh.setText("Làm mới");
        jBFresh.setFocusable(false);
        jBFresh.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBFresh.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBFresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBFreshActionPerformed(evt);
            }
        });
        jToolBar1.add(jBFresh);

        listSP.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        listSP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã sản phẩm", "Tên sản phẩm", "Đơn vị tính", "Nước SX", "Giá"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Long.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        listSP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listSPMouseClicked(evt);
            }
        });
        listSP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                listSPKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(listSP);

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel2.setText("Mã sản phẩm");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel3.setText("Tên sản phẩm");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel4.setText("Đơn vị tính");

        cbbDVT.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cbbDVT.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Lựa chọn", "cay", "hop", "quyen", "chuc", "cai" }));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel5.setText("Nước sản xuất");

        cbbNuocSX.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cbbNuocSX.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Lựa chọn", "Viet Nam", "Singapore", "Trung Quoc", "Thai Lan" }));

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel6.setText("Gía");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtMa)
                    .addComponent(txtTen)
                    .addComponent(cbbDVT, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtGia)
                    .addComponent(cbbNuocSX, 0, 207, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMa, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtTen, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbbDVT, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbbNuocSX, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtGia, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanelQLSPLayout = new javax.swing.GroupLayout(jPanelQLSP);
        jPanelQLSP.setLayout(jPanelQLSPLayout);
        jPanelQLSPLayout.setHorizontalGroup(
            jPanelQLSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelQLSPLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelQLSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelQLSPLayout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1))
                    .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 865, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28))
        );
        jPanelQLSPLayout.setVerticalGroup(
            jPanelQLSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelQLSPLayout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelQLSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 472, Short.MAX_VALUE))
                .addGap(19, 19, 19))
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getContentPane().add(jPanelQLSP, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 880, 570));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void listSPKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_listSPKeyReleased
        // TODO add your handling code here:
        LamMoi();

        if(evt.getKeyCode() == KeyEvent.VK_UP || evt.getKeyCode() == KeyEvent.VK_DOWN){
            int selectedIndex = listSP.getSelectedRow();
            listSP.setColumnSelectionInterval(0,4);
            txtMa.setText(listSP.getValueAt(selectedIndex, 0).toString());
            txtTen.setText(listSP.getValueAt(selectedIndex, 1).toString());
            String DVT;
            DVT =( listSP.getValueAt(selectedIndex, 2).toString());
            cbbDVT.setSelectedItem(DVT);

            String NuocSX;
            NuocSX = ( listSP.getValueAt(selectedIndex, 3).toString());
            cbbNuocSX.setSelectedItem(NuocSX);

            txtGia.setText(listSP.getValueAt(selectedIndex, 4).toString());
        }
    }//GEN-LAST:event_listSPKeyReleased

    private void listSPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listSPMouseClicked
        // TODO add your handling code here:
        LamMoi();
        int selectedIndex = listSP.getSelectedRow();
        listSP.setColumnSelectionInterval(0,4);
        txtMa.setText(listSP.getValueAt(selectedIndex, 0).toString());
        txtTen.setText(listSP.getValueAt(selectedIndex, 1).toString());
        String DVT;
        DVT =( listSP.getValueAt(selectedIndex, 2).toString());
        cbbDVT.setSelectedItem(DVT);

        String NuocSX;
        NuocSX = ( listSP.getValueAt(selectedIndex, 3).toString());
        cbbNuocSX.setSelectedItem(NuocSX);

        txtGia.setText(listSP.getValueAt(selectedIndex, 4).toString());

    }//GEN-LAST:event_listSPMouseClicked

    private void jBFreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBFreshActionPerformed
        // TODO add your handling code here:
        LamMoi();
    }//GEN-LAST:event_jBFreshActionPerformed

    private void jBUpDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBUpDateActionPerformed
        // TODO add your handling code here:
        StringBuilder sb = new StringBuilder();
        if (txtMa.getText().equals("")){
            sb.append("Mã sản phẩm không được để trống!!!");
            txtMa.setBackground(Color.yellow);
        } else {
            txtMa.setBackground(Color.white);
        }
        if (sb.length() > 0){
            JOptionPane.showMessageDialog(this, sb);
            return;
        }
        try{
            SanPham SP =new SanPham();

            SanPhamDao dao =new SanPhamDao();
            dao.update(SP);
            JOptionPane.showMessageDialog(this, "Sản phẩm được cập nhật thành công!");

        } catch (Exception e){
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
            e.printStackTrace();
        }
        SanPham_Load();
    }//GEN-LAST:event_jBUpDateActionPerformed

    private void jBDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBDeleteActionPerformed
        // TODO add your handling code here:
        StringBuilder sb = new StringBuilder();
        if (txtMa.getText().equals("")){
            sb.append("Mã sản phẩm không được để trống!!!");
            txtMa.setBackground(Color.yellow);
        } else {
            txtMa.setBackground(Color.white);
        }
        if (sb.length() > 0){
            JOptionPane.showMessageDialog(this, sb);
            return;
        }
        try{

            SanPhamDao dao = new SanPhamDao();
            int result = JOptionPane.showConfirmDialog(this,"Do you want to delete? ","Confirm", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (result == JOptionPane.YES_OPTION){
                dao.delete(txtMa.getText());
                JOptionPane.showMessageDialog(this, "Sản phẩm đã xóa thành công!");
            } else {
                JOptionPane.showMessageDialog(this, "Sản phẩm chưa được xóa!");
            }
        } catch (Exception e){
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
            e.printStackTrace();
        }
        SanPham_Load();
    }//GEN-LAST:event_jBDeleteActionPerformed

    private void jBInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBInsertActionPerformed
        // TODO add your handling code here:

        StringBuilder sb = new StringBuilder();
        if (txtMa.getText().equals("")){
            sb.append("Mã sản phẩm không được để trống!!!");
            txtMa.setBackground(Color.yellow);
        } else {
            txtMa.setBackground(Color.white);
        }
        if (sb.length() > 0){
            JOptionPane.showMessageDialog(this, sb);
            return;
        }
        try{
            SanPham SP = new SanPham();
            SP.setMaSP(txtMa.getText());
            SP.setTenSP(txtTen.getText());

            SP.setDVT((String) cbbDVT.getSelectedItem());
            SP.setNuocSX((String) cbbNuocSX.getSelectedItem());
            long i = Long.parseLong(txtGia.getText());
            SP.setGia(i);

            SanPhamDao dao = new SanPhamDao();
            dao.insert(SP);
            JOptionPane.showMessageDialog(this, "Sản phẩm được thêm vào thành công!");
        } catch (Exception e){
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
        SanPham_Load();

    }//GEN-LAST:event_jBInsertActionPerformed

    private void jBfindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBfindActionPerformed
        // TODO add your handling code here:

        StringBuilder sb = new StringBuilder();
        if (txtMa.getText().equals("")){
            sb.append("Mã sản phẩm không được để trống!!!");
            txtMa.setBackground(Color.yellow);
        } else {
            txtMa.setBackground(Color.white);
        }
        if (sb.length() > 0){
            JOptionPane.showMessageDialog(this, sb);
            return;
        }
        try{
            SanPhamDao dao = new SanPhamDao();
            SanPham SP = dao.find(txtMa.getText());
            if (SP != null){
                //XuatThongTin
                txtMa.setText(SP.getMaSP());
                txtTen.setText(SP.getTenSP());
                cbbDVT.setSelectedItem(SP.getDVT());
                cbbNuocSX.setSelectedItem(SP.getNuocSX());
                txtGia.setText(String.valueOf( SP.getGia()));
            } else
            JOptionPane.showMessageDialog(this, "Sản phẩm tìm kiếm không hợp lệ!");

        } catch (Exception e){
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_jBfindActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuanLySanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuanLySanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuanLySanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanLySanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new QuanLySanPham().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbbDVT;
    private javax.swing.JComboBox<String> cbbNuocSX;
    private javax.swing.JButton jBDelete;
    private javax.swing.JButton jBFresh;
    private javax.swing.JButton jBInsert;
    private javax.swing.JButton jBUpDate;
    private javax.swing.JButton jBfind;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanelQLSP;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar.Separator jSeparator4;
    private javax.swing.JToolBar.Separator jSeparator5;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTable listSP;
    private javax.swing.JTextField txtGia;
    private javax.swing.JTextField txtMa;
    private javax.swing.JTextField txtTen;
    // End of variables declaration//GEN-END:variables
}
