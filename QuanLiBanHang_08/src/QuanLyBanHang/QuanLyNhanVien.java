/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package QuanLyBanHang;

import QuanLyBanHangDao.NhanVienDao;
import QuanLyBanHangModel.NhanVien;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.sql.CallableStatement;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.JPanel;


/**
 *
 * @author Nguyen Linh
 */
public class QuanLyNhanVien extends javax.swing.JFrame {

    /**
     * Creates new form QuanLyNhanVien
     */
    Connection conn;
    PreparedStatement ps;
    ResultSet rs;

    public QuanLyNhanVien() {
        initComponents();
        getContentPane().setBackground(Color.white); 
        Connect();
        NhanVien_Load();
        //getJPanelNV();
    }
    public JPanel getJPanelNV()
    {
        return jPanelNV;
    }
    
      public void Connect(){ //ket noi csdl
        try {
        Class.forName("oracle.jdbc.driver.OracleDriver");
        System.out.print("ket noi thanh cong");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(QuanLyNhanVien.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            
           conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:orcl","QuanLyBanHang", "qlbh");
        
        } catch (SQLException ex) {
            //Logger.getLogger(QuanLyNhanVien.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
        
    public void NhanVien_Load(){
           
        try {
            ps = conn.prepareStatement("SELECT * FROM NHANVIEN ");
            rs = ps.executeQuery();
            DefaultTableModel model = (DefaultTableModel) listNV.getModel();
            model.setRowCount(0);
            
            while (rs.next()){
                Vector v1 = new Vector();
              //  for(int i=1;i<=c;i++){
                    v1.add(rs.getString("manv"));
                    v1.add(rs.getString("hoten"));
                    v1.add(rs.getDate("ngvl"));
                    v1.add(rs.getString("gioitinh"));
                    v1.add(rs.getString("cmnd"));
                    v1.add(rs.getString("diachi"));
                    v1.add(rs.getString("sodt"));
                    v1.add(rs.getString("userid"));
                    v1.add(rs.getString("password"));
                    v1.add(rs.getString("loainv"));
             // }
                model.addRow(v1);
               //listNV.setModel(model);
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(QuanLyNhanVien.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }
    
    public void LamMoi(){
       txtMaNV.setText("");
        txtHoTen.setText("");
        jDNgVL.setDate(null);
        gtNam.setSelected(false);
        gtNu.setSelected(false);
        txtCMND.setText("");
        txtDiaChi.setText("");
        txtSDT.setText("");
        txtMatKhau.setText("");   
        txtUserID.setText("");
        TxtLoaiNhanVien.setText("");
  }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelNV = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        jBTrangChu = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        jBTimKiem = new javax.swing.JButton();
        jSeparator6 = new javax.swing.JToolBar.Separator();
        jBThemMoi = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        jBXoa = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JToolBar.Separator();
        jBCapNhat = new javax.swing.JButton();
        jSeparator5 = new javax.swing.JToolBar.Separator();
        jBLamMoi = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtMaNV = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtHoTen = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        gtNam = new javax.swing.JRadioButton();
        gtNu = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        txtCMND = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtDiaChi = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtSDT = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtMatKhau = new javax.swing.JTextField();
        jDNgVL = new com.toedter.calendar.JDateChooser();
        UserID = new javax.swing.JLabel();
        txtUserID = new javax.swing.JTextField();
        LoaiNV = new javax.swing.JLabel();
        TxtLoaiNhanVien = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listNV = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jToolBar1.setBackground(new java.awt.Color(255, 255, 255));
        jToolBar1.setRollover(true);

        jBTrangChu.setText("Trang chủ");
        jBTrangChu.setFocusable(false);
        jBTrangChu.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBTrangChu.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBTrangChu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBTrangChuActionPerformed(evt);
            }
        });
        jToolBar1.add(jBTrangChu);
        jToolBar1.add(jSeparator1);

        jBTimKiem.setText("Tìm kiếm");
        jBTimKiem.setFocusable(false);
        jBTimKiem.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBTimKiem.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBTimKiemActionPerformed(evt);
            }
        });
        jToolBar1.add(jBTimKiem);
        jToolBar1.add(jSeparator6);

        jBThemMoi.setText("Thêm mới");
        jBThemMoi.setFocusable(false);
        jBThemMoi.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBThemMoi.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBThemMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBThemMoiActionPerformed(evt);
            }
        });
        jToolBar1.add(jBThemMoi);
        jToolBar1.add(jSeparator3);

        jBXoa.setText("    Xóa    ");
        jBXoa.setFocusable(false);
        jBXoa.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBXoa.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBXoaActionPerformed(evt);
            }
        });
        jToolBar1.add(jBXoa);
        jToolBar1.add(jSeparator4);

        jBCapNhat.setText("Cập nhật");
        jBCapNhat.setFocusable(false);
        jBCapNhat.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBCapNhat.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBCapNhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCapNhatActionPerformed(evt);
            }
        });
        jToolBar1.add(jBCapNhat);
        jToolBar1.add(jSeparator5);

        jBLamMoi.setText("Làm mới");
        jBLamMoi.setFocusable(false);
        jBLamMoi.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBLamMoi.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBLamMoiActionPerformed(evt);
            }
        });
        jToolBar1.add(jBLamMoi);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 0, 51));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("QUẢN LÝ NHÂN VIÊN");
        jLabel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(204, 0, 204), null));

        jPanel1.setBackground(new java.awt.Color(0, 150, 235));

        jLabel2.setText("Mã NV");

        jLabel3.setText("Họ tên");

        jLabel4.setText("Ngày vào làm");

        jLabel5.setText("Giới tính");

        gtNam.setText("Nam");
        gtNam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gtNamActionPerformed(evt);
            }
        });

        gtNu.setText("Nữ");
        gtNu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gtNuActionPerformed(evt);
            }
        });

        jLabel6.setText("CMND");

        jLabel7.setText("Địa chỉ");

        jLabel8.setText("SĐT");

        jLabel9.setText("Mật khẩu");

        UserID.setText("UserID");

        LoaiNV.setText("Loại NV");

        TxtLoaiNhanVien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtLoaiNhanVienActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(LoaiNV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(UserID, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtMaNV)
                    .addComponent(txtHoTen)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(gtNam, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gtNu, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtCMND)
                    .addComponent(txtDiaChi)
                    .addComponent(txtSDT)
                    .addComponent(txtMatKhau)
                    .addComponent(txtUserID)
                    .addComponent(TxtLoaiNhanVien)
                    .addComponent(jDNgVL, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtMaNV, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtHoTen))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDNgVL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(gtNam, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(gtNu, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtCMND, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtSDT, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(UserID, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtUserID, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                        .addGap(7, 7, 7)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LoaiNV, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TxtLoaiNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(68, 68, 68))
        );

        listNV.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã NV", "Họ tên", "Ngày vao làm", "Giới tính", "CMND", "Địa chỉ", "SĐT", "UserId", "Mật khẩu", "Loại NV"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        listNV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listNVMouseClicked(evt);
            }
        });
        listNV.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                listNVKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(listNV);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 574, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 436, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 24, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelNVLayout = new javax.swing.GroupLayout(jPanelNV);
        jPanelNV.setLayout(jPanelNVLayout);
        jPanelNVLayout.setHorizontalGroup(
            jPanelNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelNVLayout.createSequentialGroup()
                .addGroup(jPanelNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelNVLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanelNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanelNVLayout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanelNVLayout.setVerticalGroup(
            jPanelNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelNVLayout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 902, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanelNV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 631, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanelNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBTrangChuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBTrangChuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jBTrangChuActionPerformed

    private void jBTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBTimKiemActionPerformed
        // TODO add your handling code here:
          StringBuilder sb = new StringBuilder();
        if (txtMaNV.getText().equals("")){
            sb.append("Mã nhân viên không được để trống!!!");
            txtMaNV.setBackground(Color.yellow);
        } else {
             txtMaNV.setBackground(Color.white);
        }
        if (sb.length() > 0){
            JOptionPane.showMessageDialog(this, sb);
            return;
        }
      try{      
        NhanVienDao dao = new NhanVienDao();
        NhanVien NV = dao.find(txtMaNV.getText());
        if (NV != null){
            //XuatThongTin
        txtMaNV.setText(NV.getMaNV());
        txtHoTen.setText(NV.getHoTen());
        jDNgVL.setDate(NV.getNgVL());
        if (NV.getGioiTinh().equals("Nam")){
            gtNu.setSelected(false);
            gtNam.setSelected(true);
        } else {
            gtNu.setSelected(true);
            gtNam.setSelected(false);
        }
        txtCMND.setText(NV.getCMND());
        txtDiaChi.setText(NV.getDiaChi());
        txtSDT.setText(NV.getSoDT());
        txtMatKhau.setText(NV.getPassword());
        TxtLoaiNhanVien.setText(NV.getLoaiNV());
        txtUserID.setText(NV.getUserID());
        } else
        JOptionPane.showMessageDialog(this, "Nhân viên tìm kiếm không hợp lệ!");
        
      } catch (Exception e){
          JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
          e.printStackTrace();
      }  
    }//GEN-LAST:event_jBTimKiemActionPerformed

    private void jBThemMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBThemMoiActionPerformed
        // TODO add your handling code here:
      
        
        StringBuilder sb = new StringBuilder();
        if (txtMaNV.getText().equals("")){
            sb.append("Mã nhân viên không được để trống!!!");
            txtMaNV.setBackground(Color.yellow);
        } else {
             txtMaNV.setBackground(Color.white);
        }
        if (sb.length() > 0){
            JOptionPane.showMessageDialog(this, sb);
            return;
        }
      try{  
        NhanVien NV = new NhanVien();
        NV.setMaNV(txtMaNV.getText());
        NV.setHoTen(txtHoTen.getText());
        //Chuyen doi java.util.Date sang java.sql.Date
        if(jDNgVL.getDate() != null ){
        java.util.Date utilStartDate = jDNgVL.getDate();
        java.sql.Date sqlStartDate = new java.sql.Date(utilStartDate.getTime());
        NV.setNgVL(sqlStartDate);
    }
        gtNam.setText("Nam");
        gtNu.setText("Nu");
        if(gtNam.isSelected()){
            NV.setGioiTinh(gtNam.getText());
        }
        if (gtNu.isSelected()){
             NV.setGioiTinh(gtNu.getText()); 
        }
        NV.setCMND(txtCMND.getText());
        NV.setDiaChi(txtDiaChi.getText());
        NV.setSoDT(txtSDT.getText());
        NV.setPassword(txtMatKhau.getText());
        NV.setUserID(txtUserID.getText());
        NV.setLoaiNV(TxtLoaiNhanVien.getText());
        /*check sodt */
        //while(true){
           
         String strCall = "{?=call Check_SDT(?)}";
        CallableStatement call = conn.prepareCall(strCall);
        call.registerOutParameter(1,java.sql.Types.NUMERIC);
        call.setString(2,(txtSDT.getText()));
        call.executeUpdate();; 
        int rss= call.getInt(1);
            System.out.println("QuanLyBanHang.QuanLyNhanVien.jBThemMoiActionPerformed()");
        if(rss>0){
           // break;
           NhanVienDao dao = new NhanVienDao();
           dao.insert(NV);    
           JOptionPane.showMessageDialog(this, "Nhân viên được thêm vào thành công!");
        }
        else{
        JOptionPane.showMessageDialog(this, "Số điện thoại không hợp lệ!");
        txtSDT.setText("");
        //break;
        }
        //}
        /**/
        
      } catch (Exception e){
          JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
      }   
    NhanVien_Load();   
    }//GEN-LAST:event_jBThemMoiActionPerformed

    private void jBXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBXoaActionPerformed
        // TODO add your handling code here:
          StringBuilder sb = new StringBuilder();
        if (txtMaNV.getText().equals("")){
            sb.append("Mã nhân viên không được để trống!!!");
            txtMaNV.setBackground(Color.yellow);
        } else {
             txtMaNV.setBackground(Color.white);
        }
        if (sb.length() > 0){
            JOptionPane.showMessageDialog(this, sb);
            return;
        }
      try{  
        
        NhanVienDao dao = new NhanVienDao();
        int result = JOptionPane.showConfirmDialog(this,"Do you want to delete? ","Confirm", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (result == JOptionPane.YES_OPTION){
         dao.delete(txtMaNV.getText());
        JOptionPane.showMessageDialog(this, "Nhân viên đã xóa thành công!");
        } else {
        JOptionPane.showMessageDialog(this, "Nhân viên chưa được xóa!");
        }
      } catch (Exception e){
          JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
          e.printStackTrace();
      }
      NhanVien_Load();
    }//GEN-LAST:event_jBXoaActionPerformed

    private void jBCapNhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCapNhatActionPerformed
        // TODO add your handling code here:
        StringBuilder sb = new StringBuilder();
        if (txtMaNV.getText().equals("")){
            sb.append("Mã nhân viên không được để trống!!!");
            txtMaNV.setBackground(Color.yellow);
        } else {
             txtMaNV.setBackground(Color.white);
        }
        if (sb.length() > 0){
            JOptionPane.showMessageDialog(this, sb);
            return;
        }
      try{  
        NhanVien NV = new NhanVien();
        NV.setMaNV(txtMaNV.getText());
        NV.setHoTen(txtHoTen.getText());
        //Chuyen doi java.util.Date sang java.sql.Date
        if(jDNgVL.getDate() != null ){
        java.util.Date utilStartDate = jDNgVL.getDate();
        java.sql.Date sqlStartDate = new java.sql.Date(utilStartDate.getTime());
        NV.setNgVL(sqlStartDate);
    }
        gtNam.setText("Nam");
        gtNu.setText("Nu");
        if(gtNam.isSelected()){
            NV.setGioiTinh(gtNam.getText());
        }
        if (gtNu.isSelected()){
             NV.setGioiTinh(gtNu.getText());
        }
        NV.setCMND(txtCMND.getText());
        NV.setDiaChi(txtDiaChi.getText());
        NV.setSoDT(txtSDT.getText());
        NV.setPassword(txtMatKhau.getText());    
        NV.setLoaiNV(TxtLoaiNhanVien.getText());
        NV.setUserID(txtUserID.getText());
        NhanVienDao dao = new NhanVienDao();
        dao.update(NV);    
        JOptionPane.showMessageDialog(this, "Nhân viên được cập nhật thành công!");
        
      } catch (Exception e){
          JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
          e.printStackTrace();
      }  
      NhanVien_Load();
        
    }//GEN-LAST:event_jBCapNhatActionPerformed

    private void jBLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBLamMoiActionPerformed
        // TODO add your handling code here:
        LamMoi();
    }//GEN-LAST:event_jBLamMoiActionPerformed

    private void listNVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listNVMouseClicked
        // TODO add your handling code here:
        LamMoi();
        int selectedIndex = listNV.getSelectedRow();
        listNV.setColumnSelectionInterval(0,7);
        txtMaNV.setText(listNV.getValueAt(selectedIndex, 0).toString());
        txtHoTen.setText(listNV.getValueAt(selectedIndex, 1).toString());

        jDNgVL.setDate((Date) listNV.getValueAt(selectedIndex, 2));
        // gioi tinh
        String sex = listNV.getValueAt(selectedIndex, 3).toString();
        if (sex.equals("Nu")){
            gtNu.setSelected(true);
            gtNam.setSelected(false);
        } else if (sex.equals("Nam")){ gtNam.setSelected(true);
        gtNu.setSelected(false);
        }
        
        txtCMND.setText(listNV.getValueAt(selectedIndex, 4).toString());
        txtDiaChi.setText(listNV.getValueAt(selectedIndex, 5).toString());
        txtSDT.setText(listNV.getValueAt(selectedIndex, 6).toString());
        txtUserID.setText(listNV.getValueAt(selectedIndex, 7).toString());
        txtMatKhau.setText(listNV.getValueAt(selectedIndex, 8).toString());
        TxtLoaiNhanVien.setText(listNV.getValueAt(selectedIndex, 9).toString());
    }//GEN-LAST:event_listNVMouseClicked

    private void listNVKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_listNVKeyReleased
        // TODO add your handling code here:
//        LamMoi();
//        
//        if(evt.getKeyCode() == KeyEvent.VK_UP || evt.getKeyCode() == KeyEvent.VK_DOWN){
//        int selectedIndex = listNV.getSelectedRow();
//        listNV.setColumnSelectionInterval(0,7);
//        txtMaNV.setText(listNV.getValueAt(selectedIndex, 0).toString());
//        txtHoTen.setText(listNV.getValueAt(selectedIndex, 1).toString());
//        jDNgVL.setDate((Date) listNV.getValueAt(selectedIndex, 2));
//       
//        // gioi tinh
//        
//        String sex = listNV.getValueAt(selectedIndex, 3).toString();
//        if (sex.equals("Nu")){
//            gtNu.setSelected(true);
//            gtNam.setSelected(false);
//        } else if (sex.equals("Nam")){ gtNam.setSelected(true);
//        gtNu.setSelected(false);
//        }
//        
//        txtCMND.setText(listNV.getValueAt(selectedIndex, 4).toString());
//        txtDiaChi.setText(listNV.getValueAt(selectedIndex, 5).toString());
//        txtSDT.setText(listNV.getValueAt(selectedIndex, 6).toString());
//        txtUserID.setText(listNV.getValueAt(selectedIndex, 7).toString());
//        txtMatKhau.setText(listNV.getValueAt(selectedIndex, 8).toString());
//        TxtLoaiNhanVien.setText(listNV.getValueAt(selectedIndex, 9).toString());
//        Date date = null;
//        try {
//            date = new SimpleDateFormat("yyyy-MM-dd").parse((String)listNV.getValueAt(selectedIndex, 2));
//        } catch (ParseException ex) {
//            Logger.getLogger(QuanLyNhanVien.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        jDNgVL.setDate(date);
//           
//       }
    }//GEN-LAST:event_listNVKeyReleased

    private void gtNamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gtNamActionPerformed
        // TODO add your handling code here:
        if (gtNam.isSelected()) {
            gtNu.setSelected(false);
        }
    }//GEN-LAST:event_gtNamActionPerformed

    private void gtNuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gtNuActionPerformed
        // TODO add your handling code here:
        if (gtNu.isSelected()) {
            gtNam.setSelected(false);
        }
    }//GEN-LAST:event_gtNuActionPerformed

    private void TxtLoaiNhanVienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtLoaiNhanVienActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtLoaiNhanVienActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuanLyNhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuanLyNhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuanLyNhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanLyNhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuanLyNhanVien().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LoaiNV;
    private javax.swing.JTextField TxtLoaiNhanVien;
    private javax.swing.JLabel UserID;
    private javax.swing.JRadioButton gtNam;
    private javax.swing.JRadioButton gtNu;
    private javax.swing.JButton jBCapNhat;
    private javax.swing.JButton jBLamMoi;
    private javax.swing.JButton jBThemMoi;
    private javax.swing.JButton jBTimKiem;
    private javax.swing.JButton jBTrangChu;
    private javax.swing.JButton jBXoa;
    private com.toedter.calendar.JDateChooser jDNgVL;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanelNV;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar.Separator jSeparator4;
    private javax.swing.JToolBar.Separator jSeparator5;
    private javax.swing.JToolBar.Separator jSeparator6;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTable listNV;
    private javax.swing.JTextField txtCMND;
    private javax.swing.JTextField txtDiaChi;
    private javax.swing.JTextField txtHoTen;
    private javax.swing.JTextField txtMaNV;
    private javax.swing.JTextField txtMatKhau;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JTextField txtUserID;
    // End of variables declaration//GEN-END:variables
}
